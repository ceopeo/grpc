// Code generated by protoc-gen-go.
// source: screen_message.proto
// DO NOT EDIT!

package pb

import proto "github.com/golang/protobuf/proto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal

type Screen_Panel int32

const (
	Screen_UNKNOWIN Screen_Panel = 0
	Screen_IPS      Screen_Panel = 1
	Screen_OLED     Screen_Panel = 2
)

var Screen_Panel_name = map[int32]string{
	0: "UNKNOWIN",
	1: "IPS",
	2: "OLED",
}
var Screen_Panel_value = map[string]int32{
	"UNKNOWIN": 0,
	"IPS":      1,
	"OLED":     2,
}

func (x Screen_Panel) String() string {
	return proto.EnumName(Screen_Panel_name, int32(x))
}

type Screen struct {
	SizeInch   float32            `protobuf:"fixed32,1,opt,name=size_inch" json:"size_inch,omitempty"`
	Resolution *Screen_Resolution `protobuf:"bytes,2,opt,name=resolution" json:"resolution,omitempty"`
	Panel      Screen_Panel       `protobuf:"varint,3,opt,name=panel,enum=grpc.pb.Screen_Panel" json:"panel,omitempty"`
	Multitouch bool               `protobuf:"varint,4,opt,name=multitouch" json:"multitouch,omitempty"`
}

func (m *Screen) Reset()         { *m = Screen{} }
func (m *Screen) String() string { return proto.CompactTextString(m) }
func (*Screen) ProtoMessage()    {}

func (m *Screen) GetResolution() *Screen_Resolution {
	if m != nil {
		return m.Resolution
	}
	return nil
}

type Screen_Resolution struct {
	Width  uint32 `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height uint32 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
}

func (m *Screen_Resolution) Reset()         { *m = Screen_Resolution{} }
func (m *Screen_Resolution) String() string { return proto.CompactTextString(m) }
func (*Screen_Resolution) ProtoMessage()    {}

func init() {
	proto.RegisterEnum("grpc.pb.Screen_Panel", Screen_Panel_name, Screen_Panel_value)
}
